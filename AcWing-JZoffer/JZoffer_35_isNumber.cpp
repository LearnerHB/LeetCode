/**	表示数值的字符串	🌟🌟

请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。
例如，字符串"+100","5e2","-123","3.1416"和"-1E-16"都表示数值。
但是"12e","1a3.14","1.2.3","+-5"和"12e+4.3"都不是。

注意:
小数可以没有整数部分，例如.123等于0.123；
小数点后面可以没有数字，例如233.等于233.0；
小数点前面和后面可以有数字，例如233.666;
当e或E前面没有数字时，整个字符串不能表示数字，例如.e1、e1；
当e或E后面没有整数时，整个字符串不能表示数字，例如12e、12e+5.4;

样例：
输入: "0"
输出: true

思路：
(模拟，字符串处理)		O(n)

1. 先去除行首和行尾空格；
2. 行首如果有一个正负号，直接忽略；
3. 如果字符串为空或只有一个'.'，则不是一个合法数；
4. 循环整个字符串，去掉以下几种情况：
(1) '.'或'e'多于1个;
(2) '.'在'e'后面出现；
(3) 'e'后面或前面为空，或者'e'前面只有一个'.'；
(4) 'e'后面紧跟着正负号，但正负号后面为空；
剩下的情况都合法；


*/
class Solution {
public:
    bool isNumber(string s) {
        int i = 0, j = s.size()-1;
        while (i < s.size() && s[i] == ' ')
        	i++;	//去掉串前面空格
        while (j >= 0 && s[j] == ' ')
        	j--;	//去掉串后面空格
        if (i > j)
        	return false;
        s = s.substr(i, j-i+1);	//将s缩短成有效部分

        if (s[0] == '-' || s[0] == '+')
        	s = s.substr(1);	//忽略串首符号

        if (s.empty() || s[0]=='.' && s.size()==1)
        	return false;

        int dot = 0, e = 0;
        for (int i = 0; i < s.size(); i++){
        	if (s[i] >= '0' && s[i] <= '9')
        		;
        	else if (s[i] == '.'){
        		dot++;
        		if (e || dot > 1)	//如果(2)||(1)
        			return false;
        	}
        	else if (s[i] == 'e' || s[i] == 'E'){
        		e++;
        		if (i+1==s.size() || i==0 || e>1 || i==1 && s[0]=='.')
        			return false;
        		if (s[i+1]=='+' || s[i+1]=='-'){
        			if (i+2==s.size())
        				return false;
        			i++;
        		}
        	}
        	else return false;
        }
        return true;
    }
};














